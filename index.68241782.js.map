{"mappings":"AAKA,MACMA,EAAO,CACXC,YAAaC,SAASC,cAAc,eACpCC,cAAeF,SAASC,cAAc,iBACtCE,cAAeH,SAASC,cAAc,kBAGlCG,EAAsB,CAC1BC,SAAU,aACVC,kBAAmB,WACnBC,oBAAoB,GAiBtB,SAASC,EAAQC,GACXA,EAAKC,QAAU,GACjBC,OAAOC,KACL,6DACAR,GAEuB,IAAhBK,EAAKC,OAkClB,SAAyBG,GACvBC,IACA,MAAMC,EAAY,GAClBC,OAAOC,QAAQJ,EAAQ,GAAGE,WAAWG,SAAQ,EAAEC,EAAKC,MAClDL,EAAUM,KAAKD,EAAM,IAGvB,MAAME,EAAS,oEAEPT,EAAQ,GAAGU,MAAMC,gCACUX,EAAQ,GAAGU,MAAME,sCACxBZ,EAAQ,GAAGa,KAAKC,6FAGpCd,EAAQ,GAAGe,mFAGXf,EAAQ,GAAGgB,qFAE8Cd,EAAUe,KACnE,wBAGRhC,EAAKK,cAAc4B,UAAYT,C,CAxD7BU,CAAgBvB,GACPA,EAAKC,OAAS,GAAKD,EAAKC,OAAS,IAqB9C,SAAkBuB,GAChBnB,IACA,MAAMQ,EAASW,EACZC,KACCrB,GACE,iCAAiCA,EAAQU,MAAMC,gCAAgCX,EAAQU,MAAME,wBAAwBZ,EAAQa,KAAKC,oBAErIG,KAAK,IACRhC,EAAKI,cAAciC,mBAAmB,aAAcb,E,CA5BlDc,CAAS3B,E,CAIb,SAAS4B,EAAe5B,GACtB,GAAoB,MAAhBA,EAAK6B,OACP,MAAM,IAAIC,MAAM9B,EAAK+B,SAEvB,OAAO/B,C,CAGT,SAASgC,EAAaC,GACpBC,QAAQC,IAAIF,EAAMF,SAClB1B,IACAH,OAAOkC,QACL,2CACAzC,E,CAyCJ,SAASU,IACPhB,EAAKI,cAAc6B,UAAY,GAC/BjC,EAAKK,cAAc4B,UAAY,E,CAlFjCjC,EAAKC,YAAY+C,iBAAiB,QAASC,UAE3C,SAAkBC,GAChB,MAAMC,EAAcD,EAAEE,OAAO9B,MAAM+B,OACnC,GAAoB,KAAhBF,EAEF,YADAnC,IAGFsC,eAAeH,GACZI,KAAKhB,GACLgB,KAAK7C,GACL8C,MAAMb,E,GAxBY","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\n// import { fetchCountries } from './js/fetchCountries';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// var debounce = require('lodash.debounce');\n\nconst DEBOUNCE_DELAY = 300;\nconst refs = {\n  searchBoxEl: document.querySelector('#search-box'),\n  countryListEl: document.querySelector('.country-list'),\n  countryInfoEl: document.querySelector('.country-info'),\n};\n\nconst notificationOptions = {\n  position: 'center-top',\n  cssAnimationStyle: 'from-top',\n  showOnlyTheLastOne: true,\n};\n\nrefs.searchBoxEl.addEventListener('input', debounce(onSearch, DEBOUNCE_DELAY));\n\nfunction onSearch(e) {\n  const searchQuery = e.target.value.trim();\n  if (searchQuery === '') {\n    resetMarkup();\n    return;\n  }\n  fetchCountries(searchQuery)\n    .then(handle404Error)\n    .then(onFetch)\n    .catch(onFetchError);\n}\n\nfunction onFetch(data) {\n  if (data.length >= 10) {\n    Notify.info(\n      'Too many matches found. Please enter a more specific name.',\n      notificationOptions\n    );\n  } else if (data.length === 1) {\n    showCountryInfo(data);\n  } else if (data.length > 1 && data.length < 10) {\n    showFlag(data);\n  }\n}\n\nfunction handle404Error(data) {\n  if (data.status === 404) {\n    throw new Error(data.message);\n  }\n  return data;\n}\n\nfunction onFetchError(error) {\n  console.log(error.message);\n  resetMarkup();\n  Notify.failure(\n    'Oops, there is no country with that name',\n    notificationOptions\n  );\n}\n\nfunction showFlag(countries) {\n  resetMarkup();\n  const markup = countries\n    .map(\n      country =>\n        `<li class=\"country\"><img src='${country.flags.svg}' width=30 height=20 alt=\"${country.flags.alt}\"><p class=\"name\">${country.name.common}</p></li>`\n    )\n    .join('');\n  refs.countryListEl.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction showCountryInfo(country) {\n  resetMarkup();\n  const languages = [];\n  Object.entries(country[0].languages).forEach(([key, value]) => {\n    languages.push(value);\n  });\n\n  const markup = `<ul class=\"country-full\">\n        <li class=\"country\"><img src='${\n          country[0].flags.svg\n        }' width=30 height=20 alt=\"${country[0].flags.alt}\">\n            <p class=\"name\">${country[0].name.common}</p>\n        </li>\n        <li class=\"country\"><span class=\"name\">Capital:</span> ${\n          country[0].capital\n        }</li>\n        <li class=\"country\"><span class=\"name\">Population:</span> ${\n          country[0].population\n        }</li>\n        <li class=\"country\"><span class=\"name\">Languages:</span> ${languages.join(\n          ', '\n        )}</li>\n    </ul>`;\n  refs.countryInfoEl.innerHTML = markup;\n}\n\nfunction resetMarkup() {\n  refs.countryListEl.innerHTML = '';\n  refs.countryInfoEl.innerHTML = '';\n}"],"names":["$1f0dc3b9307be026$var$refs","searchBoxEl","document","querySelector","countryListEl","countryInfoEl","$1f0dc3b9307be026$var$notificationOptions","position","cssAnimationStyle","showOnlyTheLastOne","$1f0dc3b9307be026$var$onFetch","data","length","Notify","info","country","$1f0dc3b9307be026$var$resetMarkup","languages","Object","entries","forEach","key","value","push","markup","flags","svg","alt","name","common","capital","population","join","innerHTML","$1f0dc3b9307be026$var$showCountryInfo","countries","map","insertAdjacentHTML","$1f0dc3b9307be026$var$showFlag","$1f0dc3b9307be026$var$handle404Error","status","Error","message","$1f0dc3b9307be026$var$onFetchError","error","console","log","failure","addEventListener","debounce","e","searchQuery","target","trim","fetchCountries","then","catch"],"version":3,"file":"index.68241782.js.map"}